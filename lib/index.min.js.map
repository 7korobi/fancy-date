{"version":3,"sources":["webpack://VuePetitStore/webpack/universalModuleDefinition","webpack://VuePetitStore/webpack/bootstrap","webpack://VuePetitStore/./src/curtain.coffee","webpack://VuePetitStore/./src/device.coffee","webpack://VuePetitStore/./src/fancy-date-sample.coffee","webpack://VuePetitStore/./src/fancy-date.coffee","webpack://VuePetitStore/./src/firebase.coffee","webpack://VuePetitStore/./src/form.coffee","webpack://VuePetitStore/./src/index.coffee","webpack://VuePetitStore/./src/observer.coffee","webpack://VuePetitStore/./src/path.coffee","webpack://VuePetitStore/./src/poll.coffee","webpack://VuePetitStore/./src/storage.coffee","webpack://VuePetitStore/./src/struct.coffee","webpack://VuePetitStore/./src/time.coffee","webpack://VuePetitStore/./src/timer.coffee","webpack://VuePetitStore/./src/uri.coffee","webpack://VuePetitStore/./src/vue.coffee","webpack://VuePetitStore/external \"dexie\"","webpack://VuePetitStore/external \"firebase/app\"","webpack://VuePetitStore/external \"firebase/firestore\"","webpack://VuePetitStore/external \"lodash\"","webpack://VuePetitStore/external \"memory-orm\"","webpack://VuePetitStore/external \"tiny-cookie\""],"names":[],"mappings":"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","file":"lib/index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VuePetitStore\"] = factory();\n\telse\n\t\troot[\"VuePetitStore\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.coffee\");\n","_ = require 'lodash'\n\n\nmodule.exports =\n  curtain: (id)->\n    spots_id = \"#{id}_spots\"\n    space_id = \"#{id}_space\"\n    calc_id  = \"#{id}_calc\"\n    left_id   = \"#{id}_left\"\n    top_id    = \"#{id}_top\"\n    right_id  = \"#{id}_right\"\n    bottom_id = \"#{id}_bottom\"\n\n    directives:\n      [id]:\n        bind: (el, binding, { context })->\n          vm = context\n          vm.$refs[id] ?= []\n          vm.$refs[id].push el\n\n    data: ->\n      left = top = -Infinity\n      right = bottom = Infinity\n      [spots_id]: []\n      [id]: { left, top, right, bottom }\n\n    computed:\n      [left_id]:   -> o.left   < @[id].left   for o in @[spots_id]\n      [top_id]:    -> o.top    < @[id].top    for o in @[spots_id]\n      [right_id]:  -> @[id].right  < o.right  for o in @[spots_id]\n      [bottom_id]: -> @[id].bottom < o.bottom for o in @[spots_id]\n\n      [space_id]: ->\n        enter = =>\n          @[calc_id]()\n        leave = =>\n          left = top = 0\n          right = bottom = Infinity\n          @[id] = { left, top, right, bottom }\n        move = (e)=>\n          left = right = e.pageX ? e.changedTouches?[0]?.pageX\n          top = bottom = e.pageY ? e.changedTouches?[0]?.pageY\n          @[id] = { left, top, right, bottom }\n\n        scroll: enter\n        touchenter: enter\n        touchmove:  move\n        touchleave: leave\n        mouseenter: enter\n        mousemove:  move\n        mouseleave: leave\n\n    methods:\n      [calc_id]: ->\n        return unless list = @$refs[id]\n        @[spots_id] =\n          for o in list\n            if oo = o.getClientRects()?[0]\n              { left, top, right, bottom } = oo\n            else\n              left = top = Infinity\n              right = bottom = 0\n            { left, top, right, bottom }\n\n","geo_to_s = (n, mark, minus)->\n  n1 = parseInt n \n  n2 = parseInt n *       60 % 60\n  n3 = parseInt n *     3600 % 60\n  n4 = parseInt n *   216000 % 60\n  n5 = parseInt n * 12960000 % 60\n  mark = minus if n < 0\n  \"\"\"#{n1}°#{n2}′#{n3}″#{n4}‴#{n5}⁗#{mark}\"\"\"\n\nmks_to_s = (n, mark)->\n  n1 = parseInt n\n  n2 = parseInt n * 100 % 100\n  \"\"\"#{n1}#{mark}#{n2}c#{mark}\"\"\"\n\nthreshold_to_s = (newVal, margin, keep, lo, l1, l2, l3)->\n  switch\n    when newVal < -margin\n      l1\n    when margin < newVal\n      l3\n    when lo == l1 && newVal < -keep\n      l1\n    when lo == l3 && keep < newVal\n      l3\n    else\n      l2\n\nxyz = (newVal, oldVal)->\n  { x, y, z } = newVal\n  { margin, keep } = m\n  margin *= 10\n  keep   *= 10\n  oldVal.label_x = lx = threshold_to_s x, margin, keep, oldVal.label_x, \"右\", \"\", \"左\"\n  oldVal.label_y = ly = threshold_to_s y, margin, keep, oldVal.label_y, \"上\", \"\", \"下\"\n  oldVal.label_z = lz = threshold_to_s z, margin, keep, oldVal.label_z, \"表\", \"\", \"裏\"\n  oldVal.label = \"\"\"#{lx}#{ly}#{lz}\"\"\"\n\n  oldVal.x = x\n  oldVal.y = y\n  oldVal.z = z\n\nabg = (newVal, oldVal)->\n  { alpha, beta, gamma } = newVal\n  { margin, keep } = m\n  margin *= 360\n  keep   *= 360\n  oldVal.label_alpha = la = threshold_to_s alpha, margin, keep, oldVal.label_alpha, \"押下\", \"\", \"引上\"\n  oldVal.label_beta  = lb = threshold_to_s beta,  margin, keep, oldVal.label_beta,  \"左巻\", \"\", \"右巻\"\n  oldVal.label_gamma = lg = threshold_to_s gamma, margin, keep, oldVal.label_gamma, \"右折\", \"\", \"左折\"\n  oldVal.label = \"\"\"#{la}#{lb}#{lg}\"\"\"\n\n  oldVal.alpha = alpha\n  oldVal.beta  = beta\n  oldVal.gamma = gamma\n\nxyz_new = ->\n  x: 0\n  y: 0\n  z: 0\n  label: \"\"\n  label_x: \"\"\n  label_y: \"\"\n  label_z: \"\"\n\nabg_new = ->\n  alpha: 0\n  beta:  0\n  gamma: 0\n  absolute: 0\n  label: \"\"\n  label_alpha: \"\"\n  label_beta:  \"\"\n  label_gamma: \"\"\n\naccel = xyz_new()\ngravity = xyz_new()\naccel_with_gravity = xyz_new()\n\ngyro = abg_new()\nrotate = abg_new()\n\ngamepads = []\n\ngeo =\n  label: \"\"\n  latitude:  0\n  longitude: 0\n  altitude:  0\n  heading:   0\n  speed:     0\n\nscroll =\n  top:    0\n  center: 0\n  bottom: 0\n\n  left:   0\n  right:  0\n\n  horizon: 0\n  height:  0\n  width:   0\n\n  size:         0\n  aspect_ratio: 1\n  is_square:     true\n  is_oblong:    false\n  is_horizontal: true\n  is_vertical:  false\n\n\ndeviceorientation =\n  count: 0\n  call: ({ alpha, beta, gamma, absolute })->\n    gyro.alpha = alpha\n    gyro.beta  = beta\n    gyro.gamma = gamma\n    gyro.absolute = absolute\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        window.addEventListener \"deviceorientation\", @call\n\n      beforeDestroy: =>\n        return if --@count\n        window.removeEventListener \"deviceorientation\", @call\n\ndevicemotion =\n  count: 0\n  call: ({ interval, acceleration, accelerationIncludingGravity, rotationRate })->\n    calc_gravity =\n      x: accelerationIncludingGravity.x - acceleration.x\n      y: accelerationIncludingGravity.y - acceleration.y\n      z: accelerationIncludingGravity.z - acceleration.z\n    xyz acceleration,                 accel\n    xyz accelerationIncludingGravity, accel_with_gravity\n    xyz calc_gravity,                 gravity\n\n    abg rotationRate, rotate\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        window.addEventListener \"devicemotion\", @call\n\n      beforeDestroy: =>\n        return if --@count\n        window.removeEventListener \"devicemotion\", @call\n\ngeolocation =\n  watch_id: null\n  count: 0\n  call: ({ coords, timestamp })->\n    { accuracy, altitudeAccuracy, latitude, longitude, altitude, heading, speed } = coords\n    altitude ?= 0\n\n    geo.label = \"\"\"#{geo_to_s(longitude,'N','S')} #{geo_to_s(latitude,'E','W')} #{mks_to_s(altitude,'m')}\"\"\"\n    geo.longitude = longitude\n    geo.latitude = latitude\n    geo.altitude = altitude\n    geo.heading = heading\n    geo.speed = speed\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless navigator?.geolocation?\n        return if @count++\n        @watch_id = navigator.geolocation.watchPosition @call, ({ code })->\n          console.log \"watchPosition error = #{code}\"\n        ,\n          enableHighAccuracy: true\n          maximumAge: 60 * 1000\n          timeout:    10 * 1000\n      beforeDestroy: =>\n        return if --@count\n        navigator.geolocation.clearWatch @watch_id\n\nscroll_poll =\n  count: 0\n  call: ->\n    scroll.top = parseInt scrollY\n    scroll.left = parseInt scrollX\n    scroll.width = parseInt innerWidth\n    scroll.height = parseInt innerHeight\n    { height, top, left, width } = scroll\n\n    if width < height\n      scroll.size = width\n      scroll.aspect_ratio = height / width\n      scroll.is_vertical = true\n      scroll.is_horizontal = false\n    else\n      scroll.size = height\n      scroll.aspect_ratio = width / height\n      scroll.is_vertical = false\n      scroll.is_horizontal = true\n    scroll.is_square = !( scroll.is_oblong = 1.35 < scroll.aspect_ratio )\n\n    scroll.horizon = height >> 1\n    scroll.center = top + (height >> 1)\n    scroll.bottom = top + height\n    scroll.right = left + width\n\n    requestAnimationFrame scroll_poll.call\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        @call()\n\n      beforeDestroy: =>\n\ngamepad_poll =\n  count: 0\n  conn: ({ gamepad: { timestamp, connected, buttons, axes } })->\n    { index, timestamp, connected, buttons, axes } = gamepad\n    gamepads[index] = gamepad\n    if connected\n      # join\n    else\n      # bye\n  call: ->\n    unless window.ongamepadconnected\n      for gamepad in navigator.getGamepads()\n        { index } = gamepad\n        gamepads[index] = gamepad\n      \n    requestAnimationFrame gamepad_poll.call\n\n  with: (o)->\n    Object.assign o,\n      mounted: =>\n        return unless window?\n        return if @count++\n        @call()\n        if window.ongamepadconnected\n          window.addEventListener \"gamepadconnected\", @conn\n          window.addEventListener \"gamepaddisconnected\", @conn\n\n      beforeDestroy: =>\n        return if --@count\n        if window.ongamepadconnected\n          window.removeEventListener \"gamepadconnected\", @conn\n          window.removeEventListener \"gamepaddisconnected\", @conn\n\n\nmodule.exports = m =\n  margin: 0.4\n  keep:   0.1\n  device: ({ margin, keep })->\n    m.margin = margin\n    m.keep   = keep\n\n  gamepad: ->\n    gamepad_poll.with\n      data: ->\n        { gamepads }\n\n  geo: ->\n    geolocation.with\n      data: ->\n        { geo }\n\n  gyro: ->\n    deviceorientation.with\n      data: ->\n        { gyro }\n\n  accel: ->\n    devicemotion.with\n      data: ->\n        { accel, gravity, accel_with_gravity }\n\n  rotate: ->\n    devicemotion.with\n      data: ->\n        { rotate }\n\n  scroll: ->\n    scroll_poll.with\n      data: ->\n        { scroll }\n\n      methods:\n        scroll_to: ({ query, mode })->\n          return unless el = document?.querySelector query\n          return unless { height, top } = el.getBoundingClientRect()\n          switch mode\n            when 'center'\n              top += (height >> 1) - scroll.horizon\n            when 'bottom'\n              top +=  height\n\n          console.log \" go to #{query}(#{mode}) as #{top}px\"\n          window.scrollBy 0, top\n","FancyDate = require './fancy-date'\n\nEARTH = [\n  [31556925147.0, new Date(\"2019/03/21 06:58\").getTime()]\n  [ 2551442889.6, new Date(\"2019/01/06 10:28\").getTime()]\n  [   86400000  , 0] # LOD ではなく、暦上の1日。Unix epoch では閏秒を消し去るため。\n  23.4397\n  [ 35, 135 ]\n]\n\nMARS = [\n  [59354347573.5373, new Date(\"2018/10/28 09:00\").getTime()]\n  [ 2551442889.6,    new Date(\"2019/01/06 10:28\").getTime()]\n  [   88775000  , 0] # 24時間39分35秒。\n  25.19\n  [ 35, 0 ]\n]\n\nFastEarth = [ # 天体が地球の百倍速のケース\n  [315569251.470, new Date(\"2019/03/21 06:58\").getTime() / 100]\n  [ 25514428.896, new Date(\"2019/01/06 10:28\").getTime() / 100]\n  [   864000    , 0] # LOD ではなく、暦上の1日。Unix epoch では閏秒を消し去るため。\n  23.4397\n  [ 35, 135 ]\n]\n\nERAS = [\n  [\"大化\", -41795611200000 - 75600000]\n  [\"白雉\", -41647953600000 - 75600000]\n  [\"朱鳥\", -40499352000000 - 75600000]\n  [\"大宝\", -40034865600000 - 75600000]\n  [\"慶雲\", -39936369600000 - 75600000]\n  [\"和銅\", -39821371200000 - 75600000]\n  [\"霊亀\", -39579883200000 - 75600000]\n  [\"養老\", -39509640000000 - 75600000]\n  [\"神亀\", -39314289600000 - 75600000]\n  [\"天平\", -39140712000000 - 75600000]\n  [\"天平感宝\", -38520014400000 - 75600000]\n  [\"天平勝宝\", -38510769600000 - 75600000]\n  [\"天平宝字\", -38256753600000 - 75600000]\n  [\"天平神護\", -38023041600000 - 75600000]\n  [\"神護景雲\", -37940616000000 - 75600000]\n  [\"宝亀\", -37842465600000 - 75600000]\n  [\"天応\", -37518292800000 - 75600000]\n  [\"延暦\", -37465761600000 - 75600000]\n  [\"大同\", -36718228800000 - 75600000]\n  [\"弘仁\", -36580420800000 - 75600000]\n  [\"天長\", -36160603200000 - 75600000]\n  [\"承和\", -35844465600000 - 75600000]\n  [\"嘉祥\", -35389483200000 - 75600000]\n  [\"仁寿\", -35298763200000 - 75600000]\n  [\"斉衡\", -35186356800000 - 75600000]\n  [\"天安\", -35115681600000 - 75600000]\n  [\"貞観\", -35047339200000 - 75600000]\n  [\"元慶\", -34478222400000 - 75600000]\n  [\"仁和\", -34232846400000 - 75600000]\n  [\"寛平\", -34099704000000 - 75600000]\n  [\"昌泰\", -33816571200000 - 75600000]\n  [\"延喜\", -33712977600000 - 75600000]\n  [\"延長\", -33026875200000 - 75600000]\n  [\"承平\", -32775537600000 - 75600000]\n  [\"天慶\", -32551416000000 - 75600000]\n  [\"天暦\", -32270702400000 - 75600000]\n  [\"天徳\", -31938667200000 - 75600000]\n  [\"応和\", -31834987200000 - 75600000]\n  [\"康保\", -31725864000000 - 75600000]\n  [\"安和\", -31597905600000 - 75600000]\n  [\"天禄\", -31545892800000 - 75600000]\n  [\"天延\", -31428907200000 - 75600000]\n  [\"貞元\", -31347864000000 - 75600000]\n  [\"天元\", -31272523200000 - 75600000]\n  [\"永観\", -31133419200000 - 75600000]\n  [\"寛和\", -31071124800000 - 75600000]\n  [\"永延\", -31009262400000 - 75600000]\n  [\"永祚\", -30935044800000 - 75600000]\n  [\"正暦\", -30896856000000 - 75600000]\n  [\"長徳\", -30760344000000 - 75600000]\n  [\"長保\", -30638606400000 - 75600000]\n  [\"寛弘\", -30464510400000 - 75600000]\n  [\"長和\", -30196152000000 - 75600000]\n  [\"寛仁\", -30061108800000 - 75600000]\n  [\"治安\", -29940494400000 - 75600000]\n  [\"万寿\", -29832408000000 - 75600000]\n  [\"長元\", -29706264000000 - 75600000]\n  [\"長暦\", -29430993600000 - 75600000]\n  [\"長久\", -29317204800000 - 75600000]\n  [\"寛徳\", -29190974400000 - 75600000]\n  [\"永承\", -29145873600000 - 75600000]\n  [\"天喜\", -28934366400000 - 75600000]\n  [\"康平\", -28756814400000 - 75600000]\n  [\"治暦\", -28537185600000 - 75600000]\n  [\"延久\", -28421409600000 - 75600000]\n  [\"承保\", -28252152000000 - 75600000]\n  [\"承暦\", -28150545600000 - 75600000]\n  [\"永保\", -28046606400000 - 75600000]\n  [\"応徳\", -27952516800000 - 75600000]\n  [\"寛治\", -27852984000000 - 75600000]\n  [\"嘉保\", -27609854400000 - 75600000]\n  [\"永長\", -27548424000000 - 75600000]\n  [\"承徳\", -27517492800000 - 75600000]\n  [\"康和\", -27463320000000 - 75600000]\n  [\"長治\", -27321969600000 - 75600000]\n  [\"嘉承\", -27253195200000 - 75600000]\n  [\"天仁\", -27179755200000 - 75600000]\n  [\"天永\", -27120139200000 - 75600000]\n  [\"永久\", -27023284800000 - 75600000]\n  [\"元永\", -26876059200000 - 75600000]\n  [\"保安\", -26811691200000 - 75600000]\n  [\"天治\", -26684683200000 - 75600000]\n  [\"大治\", -26629560000000 - 75600000]\n  [\"天承\", -26470670400000 - 75600000]\n  [\"長承\", -26421336000000 - 75600000]\n  [\"保延\", -26335627200000 - 75600000]\n  [\"永治\", -26140708800000 - 75600000]\n  [\"康治\", -26116084800000 - 75600000]\n  [\"天養\", -26057937600000 - 75600000]\n  [\"久安\", -26014564800000 - 75600000]\n  [\"仁平\", -25840728000000 - 75600000]\n  [\"久寿\", -25720718400000 - 75600000]\n  [\"保元\", -25674840000000 - 75600000]\n  [\"平治\", -25581009600000 - 75600000]\n  [\"永暦\", -25556385600000 - 75600000]\n  [\"応保\", -25505928000000 - 75600000]\n  [\"長寛\", -25455211200000 - 75600000]\n  [\"永万\", -25385918400000 - 75600000]\n  [\"仁安\", -25348248000000 - 75600000]\n  [\"嘉応\", -25265649600000 - 75600000]\n  [\"承安\", -25200763200000 - 75600000]\n  [\"安元\", -25067534400000 - 75600000]\n  [\"治承\", -25003252800000 - 75600000]\n  [\"養和\", -24877368000000 - 75600000]\n  [\"寿永\", -24850756800000 - 75600000]\n  [\"元暦\", -24790449600000 - 75600000]\n  [\"文治\", -24749841600000 - 75600000]\n  [\"建久\", -24602097600000 - 75600000]\n  [\"正治\", -24317496000000 - 75600000]\n  [\"建仁\", -24259953600000 - 75600000]\n  [\"元久\", -24164913600000 - 75600000]\n  [\"建永\", -24095448000000 - 75600000]\n  [\"承元\", -24049742400000 - 75600000]\n  [\"建暦\", -23941396800000 - 75600000]\n  [\"建保\", -23854910400000 - 75600000]\n  [\"承久\", -23685998400000 - 75600000]\n  [\"貞応\", -23591476800000 - 75600000]\n  [\"元仁\", -23509310400000 - 75600000]\n  [\"嘉禄\", -23496523200000 - 75600000]\n  [\"安貞\", -23413147200000 - 75600000]\n  [\"寛喜\", -23375304000000 - 75600000]\n  [\"貞永\", -23278622400000 - 75600000]\n  [\"天福\", -23244321600000 - 75600000]\n  [\"文暦\", -23196715200000 - 75600000]\n  [\"嘉禎\", -23167425600000 - 75600000]\n  [\"暦仁\", -23067633600000 - 75600000]\n  [\"延応\", -23061326400000 - 75600000]\n  [\"仁治\", -23017176000000 - 75600000]\n  [\"寛元\", -22934664000000 - 75600000]\n  [\"宝治\", -22806878400000 - 75600000]\n  [\"建長\", -22741387200000 - 75600000]\n  [\"康元\", -22505342400000 - 75600000]\n  [\"正嘉\", -22491691200000 - 75600000]\n  [\"正元\", -22426891200000 - 75600000]\n  [\"文応\", -22392331200000 - 75600000]\n  [\"弘長\", -22366238400000 - 75600000]\n  [\"文永\", -22271112000000 - 75600000]\n  [\"建治\", -21919204800000 - 75600000]\n  [\"弘安\", -21829694400000 - 75600000]\n  [\"正応\", -21508286400000 - 75600000]\n  [\"永仁\", -21341880000000 - 75600000]\n  [\"正安\", -21161563200000 - 75600000]\n  [\"乾元\", -21049675200000 - 75600000]\n  [\"嘉元\", -21025483200000 - 75600000]\n  [\"徳治\", -20920075200000 - 75600000]\n  [\"延慶\", -20861841600000 - 75600000]\n  [\"応長\", -20783563200000 - 75600000]\n  [\"正和\", -20753668800000 - 75600000]\n  [\"文保\", -20599531200000 - 75600000]\n  [\"元応\", -20531016000000 - 75600000]\n  [\"元亨\", -20472782400000 - 75600000]\n  [\"正中\", -20354068800000 - 75600000]\n  [\"嘉暦\", -20309227200000 - 75600000]\n  [\"元徳\", -20204424000000 - 75600000]\n  [\"元弘\", -20142302400000 - 75600000]\n  [\"正慶\", -20120270400000 - 75600000]\n  [\"建武\", -20064024000000 - 75600000]\n  [\"延元\", -19997668800000 - 75600000]\n  [\"興国\", -19867636800000 - 75600000]\n  [\"正平\", -19657598400000 - 75600000]\n  [\"建徳\", -18913780800000 - 75600000]\n  [\"文中\", -18859867200000 - 75600000]\n  [\"天授\", -18760420800000 - 75600000]\n  [\"弘和\", -18580708800000 - 75600000]\n  [\"元中\", -18479707200000 - 75600000]\n  [\"暦応\", -19918785600000 - 75600000]\n  [\"康永\", -19803960000000 - 75600000]\n  [\"貞和\", -19694836800000 - 75600000]\n  [\"観応\", -19556510400000 - 75600000]\n  [\"文和\", -19474862400000 - 75600000]\n  [\"延文\", -19364961600000 - 75600000]\n  [\"康安\", -19206763200000 - 75600000]\n  [\"貞治\", -19161403200000 - 75600000]\n  [\"応安\", -18990849600000 - 75600000]\n  [\"永和\", -18768110400000 - 75600000]\n  [\"康暦\", -18640929600000 - 75600000]\n  [\"永徳\", -18579499200000 - 75600000]\n  [\"至徳\", -18484891200000 - 75600000]\n  [\"嘉慶\", -18373003200000 - 75600000]\n  [\"康応\", -18328161600000 - 75600000]\n  [\"明徳\", -18293515200000 - 75600000]\n  [\"応永\", -18157608000000 - 75600000]\n  [\"正長\", -17089185600000 - 75600000]\n  [\"永享\", -17047713600000 - 75600000]\n  [\"嘉吉\", -16686907200000 - 75600000]\n  [\"文安\", -16593595200000 - 75600000]\n  [\"宝徳\", -16420708800000 - 75600000]\n  [\"享徳\", -16326532800000 - 75600000]\n  [\"康正\", -16229592000000 - 75600000]\n  [\"長禄\", -16162977600000 - 75600000]\n  [\"寛正\", -16058952000000 - 75600000]\n  [\"文正\", -15897643200000 - 75600000]\n  [\"応仁\", -15863860800000 - 75600000]\n  [\"文明\", -15795518400000 - 75600000]\n  [\"長享\", -15222168000000 - 75600000]\n  [\"延徳\", -15155726400000 - 75600000]\n  [\"明応\", -15064056000000 - 75600000]\n  [\"文亀\", -14792760000000 - 75600000]\n  [\"永正\", -14698238400000 - 75600000]\n  [\"大永\", -14145278400000 - 75600000]\n  [\"享禄\", -13926081600000 - 75600000]\n  [\"天文\", -13800283200000 - 75600000]\n  [\"弘治\", -13068475200000 - 75600000]\n  [\"永禄\", -12993998400000 - 75600000]\n  [\"元亀\", -12609259200000 - 75600000]\n  [\"天正\", -12506788800000 - 75600000]\n  [\"文禄\", -11896113600000 - 75600000]\n  [\"慶長\", -11772043200000 - 75600000]\n  [\"元和\", -11181326400000 - 75600000]\n  [\"寛永\", -10909425600000 - 75600000]\n  [\"正保\", -10254859200000 - 75600000]\n  [\"慶安\", -10152907200000 - 75600000]\n  [\"承応\", -10009742400000 - 75600000]\n  [\"明暦\", -9928526400000 - 75600000]\n  [\"万治\", -9825624000000 - 75600000]\n  [\"寛文\", -9738705600000 - 75600000]\n  [\"延宝\", -9346190400000 - 75600000]\n  [\"天和\", -9092865600000 - 75600000]\n  [\"貞享\", -9017006400000 - 75600000]\n  [\"元禄\", -8873409600000 - 75600000]\n  [\"宝永\", -8384990400000 - 75600000]\n  [\"正徳\", -8159313600000 - 75600000]\n  [\"享保\", -7996363200000 - 75600000]\n  [\"元文\", -7370654400000 - 75600000]\n  [\"寛保\", -7217726400000 - 75600000]\n  [\"延享\", -7123809600000 - 75600000]\n  [\"寛延\", -6986865600000 - 75600000]\n  [\"宝暦\", -6880939200000 - 75600000]\n  [\"明和\", -6485054400000 - 75600000]\n  [\"安永\", -6218510400000 - 75600000]\n  [\"天明\", -5954299200000 - 75600000]\n  [\"寛政\", -5707454400000 - 75600000]\n  [\"享和\", -5326430400000 - 75600000]\n  [\"文化\", -5231476800000 - 75600000]\n  [\"文政\", -4784097600000 - 75600000]\n  [\"天保\", -4384497600000 - 75600000]\n  [\"弘化\", -3943857600000 - 75600000]\n  [\"嘉永\", -3842078400000 - 75600000]\n  [\"安政\", -3627806400000 - 75600000]\n  [\"万延\", -3462782400000 - 75600000]\n  [\"文久\", -3432110400000 - 75600000]\n  [\"元治\", -3337588800000 - 75600000]\n  [\"慶応\", -3303028800000 - 75600000]\n  [\"明治\", -3216715200000 - 75600000]\n  [\"大正\", -1812110400000 - 75600000]\n  [\"昭和\", -1357560000000 - 75600000]\n  [\"平成\",   600264000000 - 75600000]\n  [\"令和\",  1556712000000 - 75600000]\n];\n\nGREGORIO = \n  calendar: [\n    \"1970年1月1日(木)0時0分0秒\"\n    0\n    [4, 100, 400]\n  ]\n  yeary: [\n    ['日','月','火','水','木','金','土']\n    [1..12].map (i)-> \"#{i}月\"\n    [31, 0,31,30,31,30,31,31,30,31,30,31]\n  ]\n  seasonly: [\n    #   節    中     節    中     節    中 \n    [\"立春\",\"雨水\",\"啓蟄\",\"春分\",\"清明\",\"穀雨\",\n     \"立夏\",\"小満\",\"芒種\",\"夏至\",\"小暑\",\"大暑\",\n     \"立秋\",\"処暑\",\"白露\",\"秋分\",\"寒露\",\"霜降\",\n     \"立冬\",\"小雪\",\"大雪\",\"冬至\",\"小寒\",\"大寒\"]\n  ]\n  moony: [\n    ['朔'  ,'既朔','三日月','上弦' ,'上弦','上弦' ,'上弦'  ,'上弦' ,'上弦'  ,'上弦' ,\n     '上弦','上弦','十三夜','小望月','満月','十六夜','立待月','居待月','臥待月','更待月',\n     '下限','下限','下限'  ,'下限' ,'下限','下限' ,'下限'  ,'下限' ,'晦'    ,'晦'  ]\n  ]\n  daily: [\n    [0...24].map (i)-> \"#{i}時\"\n    [0...60].map (i)-> \"#{i}分\"\n  ]\n\n平気法 =\n  calendar: [\n    \"1970年1月1日(木)0時0分0秒\"\n    0\n  ]\n  yeary: [\n    [\"先勝\",\"友引\",\"先負\",\"仏滅\",\"大安\",\"赤口\"]\n    ['睦月','如月','弥生','卯月','皐月','水無月','文月','葉月','長月','神無月','霜月','師走']\n  ]\n  daily: [\n    ['夜九つ','夜八つ','暁七つ',\n      '明六つ','朝五つ','昼四つ',\n      '昼九つ','昼八つ','夕七つ',\n      '暮六つ','宵五つ','夜四つ'\n    ]\n    ['一つ','二つ','三つ','四つ']\n  ]\n\n\nFancyDate.Gregorian = g = new FancyDate()\n  .planet   ...EARTH\n  .calendar ...GREGORIO.calendar\n  .era \"西暦\"\n  .yeary    ...GREGORIO.yeary\n  .seasonly ...GREGORIO.seasonly\n  .moony    ...GREGORIO.moony\n  .daily    ...GREGORIO.daily\n  .init()\n\nFancyDate.平気法 = new FancyDate()\n  .planet   ...EARTH\n  .calendar ...平気法.calendar\n  .era \"謎暦\", ERAS\n  .yeary    ...平気法.yeary\n  .seasonly ...GREGORIO.seasonly\n  .moony    ...GREGORIO.moony\n  .daily    ...平気法.daily\n  .init()\n\nFancyDate.Fast = new FancyDate()\n  .planet   ...FastEarth\n  .calendar ...GREGORIO.calendar\n  .era \"fast\", ERAS\n  .yeary    ...GREGORIO.yeary\n  .seasonly ...GREGORIO.seasonly\n  .moony    ...GREGORIO.moony\n  .daily    ...GREGORIO.daily\n  .init()\n\nFancyDate.Mars = g.dup()\n  .planet   ...MARS\n  .calendar ...GREGORIO.calendar\n  .init()\n","  \n{\n  timezone\n  by_tempo\n  to_timer\n  to_msec\n  to_sec\n  to_tempo_by\n  to_tempo_bare\n} = require \"./time\"\n_ = require \"lodash\"\n\nreg_parse = /(\\d+)年(\\d+)月(\\d+)日\\(([^)])\\)(\\d+)時(\\d+)分(\\d+)秒/\nreg_token = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g\ndefault_parse_format  = \"yyyyMMdd\"\ndefault_format_format = \"GyMd(e)Hms\"\n\ncalc_set = (path, o)->\n  for key, val of o\n    @calc[path][key] = val?[path] || val\n\nsub_define = (msec, size)->\n  range = [size]\n  msec = msec / size\n  { range, msec }\n\ndaily_define = (msec, day)->\n  range = [Math.floor(msec / day)]\n  msec = range[0] * day\n  { range, msec }\n\ndaily_measure = (msec, day)->\n  range = [Math.floor(msec / day), Math.ceil(msec / day)]\n  { range, msec }\n\nexport class FancyDate\n  constructor: (o)->\n    if o\n      { dic, calc } = o\n      @dic  = _.cloneDeep dic\n      @calc = _.cloneDeep calc\n    else\n      @dic = {}\n      @calc =\n        eras: []\n        divs: {}\n        idx:  {}\n        gap:  {}\n        zero: {}\n        msec: {}\n        range: {}\n\n  dup: ->\n    new @constructor @\n\n  planet: (\n    [ revolution = g.calc.msec.year, spring = g.dic.spring]\n    [ synodic    = g.calc.msec.moon, synodic_zero  = g.dic.synodic_zero ]\n    [ rotation   = g.calc.msec.day,  rotation_zero = g.dic.rotation_zero] \n    axtial_tilt   = g.dic.axtial_tilt,\n    geo = g.dic.geo\n  )->\n    year   = daily_measure revolution, rotation\n    moon   = daily_measure    synodic, rotation\n    day    = daily_define    rotation, rotation\n    calc_set.call @, \"range\",    { year, moon, day }\n    calc_set.call @, \"msec\",     { year, moon, day }\n\n    [lat, lng] = geo\n    tz_offset = rotation / 360 * lng\n\n    Object.assign @dic, { geo, lat, lng, axtial_tilt, spring, synodic_zero, rotation_zero, tz_offset }\n    @\n\n  era: ( era, eras = [] )->\n    eras = _.cloneDeep eras\n    Object.assign @dic, { era, eras }\n    @\n\n  yeary: ( weeks = g.dic.weeks, months = g.dic.months, month_ranges )->\n    month = daily_measure @calc.msec.year / months.length, @calc.msec.day\n    week  = daily_define  weeks.length * @calc.msec.day,   @calc.msec.day\n    calc_set.call @, \"range\",    { month, week }\n    calc_set.call @, \"msec\",     { month, week }\n    Object.assign @dic, { weeks, months, month_ranges }\n    @\n\n  moony: (moons)->\n    Object.assign @dic, { moons }\n    @\n\n  seasonly: (seasons)->\n    season = sub_define @calc.msec.year, seasons.length\n    calc_set.call @, \"range\",    { season }\n    calc_set.call @, \"msec\",     { season }\n    Object.assign @dic, { seasons }\n    @\n\n  daily: (hours = g.dic.hours, minutes = g.dic.minutes)->\n    hour   = sub_define @calc.msec.day,  hours.length\n    minute = sub_define      hour.msec,  minutes.length\n    second = sub_define    minute.msec,  minute.msec / 1000\n    calc_set.call @, \"range\",    { hour, minute, second }\n    calc_set.call @, \"msec\",     { hour, minute, second }\n    Object.assign @dic, { hours, minutes }\n    @\n\n  calendar: (start = g.dic.start, start_at = g.dic.start_at, leaps = null)->\n    Object.assign @dic, { leaps, start, start_at }\n    @\n\n  init: ->\n    @def_table()\n    calc_set.call @, \"idx\",  @def_idx()\n    calc_set.call @, \"zero\", @def_zero()\n\n    zero = @calc.zero.era\n    list =\n      for [ title, msec ], idx in @dic.eras\n        { u } = @to_tempos msec\n        a = [ title, msec, u.now_idx]\n        @calc.eras.push a\n        msec - zero\n    list.push Infinity\n    @table.msec.era = list\n    @\n\n  def_table_by_leap_year: ->\n    day = @calc.msec.day\n    upto = (src)->\n      msec = 0\n      for i in src\n        msec += i * day\n\n    [...leaps, period] = @dic.leaps\n\n    range =\n      year:\n        for idx in [0...period]\n          is_leap = 0\n          for div, mode in leaps\n            continue if idx % div\n            is_leap = ! mode % 2\n          @calc.range.year[is_leap]\n    range.year[0] = @calc.range.year[1]\n    years = _.uniq range.year\n\n    { month_ranges, months } = @dic\n    unless month_ranges\n      month_ranges =\n        for str, idx in months\n          @calc.range.month[1 - idx % 2]\n      month_ranges[1] = 0\n    month_sum = 0\n    for i in month_ranges\n      month_sum += i\n\n    range.month = {}\n    for size in years\n      a = Array.from month_ranges\n      a[1] = size - month_sum\n      range.month[size] = a\n\n    year = upto range.year\n    period = year[year.length - 1]\n    period = daily_define period, day\n    calc_set.call @, \"msec\",     { period }\n\n    month = {}\n    for size in years\n      month[size * day] = upto range.month[size]\n\n    @table = { range, msec: { year, month } }\n    ({ size }, path)->\n      switch path\n        when 'year'\n          year\n        when 'month'\n          month[size]\n        else\n          null\n\n  def_table_by_season: ->\n    @table = { range: {}, msec: {} }\n    (o, path)-> null\n\n  def_table: ->\n    @get_table = \n      if @dic.leaps?\n        @def_table_by_leap_year()\n      else\n        @def_table_by_season()\n\n  def_idx: ->\n    week = @dic.weeks.length\n    calc_set.call @, \"divs\", { week }\n\n    [,year, month, day, week, hour, minute, second] = @dic.start.match reg_parse\n    year   = year   - 0\n    month  = month  - 0\n    day    = day    - 0\n    hour   = hour   - 0\n    minute = minute - 0\n    second = second - 0\n    week   = @dic.weeks.indexOf week\n    season = @dic.seasons.indexOf '春分'\n    moon   = 0\n\n    if @dic.leaps?\n      [..., full_period] = @dic.leaps\n      period = full_period\n      calc_set.call @, \"divs\", { period }\n\n      period = Math.floor year / @calc.divs.period\n      year   = year % @calc.divs.period\n      { period, year, month, moon, week, day, hour, minute, second, season }\n    else\n      { year, month, moon, week, day, hour, minute, second, season }\n\n  def_zero: ->\n    zero_size = (path, idx = 0)=>\n      @dic.start_at - (@calc.idx[path] - idx) * @calc.msec[path]\n    zero   = @dic.start_at - @dic.start_at - @dic.tz_offset\n    second = zero   + zero_size \"second\"\n    minute = second + zero_size \"minute\"\n    hour   = minute + zero_size \"hour\"\n    day    = hour   + zero_size \"day\", 1\n    week   = day    + zero_size(\"week\") / @calc.divs.week\n\n    # 元号\n    era = @dic.eras[0]?[1] || Infinity\n    @calc.eras = []\n\n    # JD\n    jd = -2440587.5 * @calc.msec.day\n    ld = jd + 2299159.5 * @calc.msec.day\n    mjd = jd + 2400000.5 * @calc.msec.day\n\n    # 単純のため平気法。\n    season = @dic.spring + zero_size \"season\" # 立春点\n    { since } = to_tempo_bare @calc.msec.year, @dic.start_at, season\n    season = since + zero_size \"year\"\n    moon   = 0 - @dic.synodic_zero\n\n    if @dic.leaps?\n      year_size = @calc.msec.day * @table.range.year[ @calc.idx.year %% @calc.divs.period ]\n\n      month  = day   - (@table.msec.month[year_size][ @calc.idx.month - 2 ] || 0)\n      year   = month - (@table.msec.year[         @calc.idx.year  - 1 ] || 0)\n      period = year  + zero_size \"period\"\n\n      season += zero_size \"period\"\n      if period < era\n        era = period + @table.msec.year[0]\n        @calc.eras = [[@dic.era, era, 1]]\n    else\n      if season < era\n        era = season + @calc.msec.year\n        @calc.eras = [[@dic.era, era, 1]]\n    { period, era, week, season, moon, day, jd,ld,mjd }\n\n###\nhttp://bakamoto.sakura.ne.jp/buturi/2hinode.pdf\nベクトルで\na1 = e1 * cos(lat/360) + e3 * sin(lat/360)\na2 = e3 * cos(lat/360) - e1 * sin(lat/360)\nT = (赤緯, 時角)->\n  a1 * sin(赤緯) + cos(赤緯) * (a2 * cos(時角) - e2 * sin(時角))\nT = ( lat, 赤緯, 時角 )->\n  e1 * ( cos(lat/360) * sin(赤緯) - sin(lat/360) * cos(赤緯) * cos(時角) ) +\n  e2 * (-cos(赤緯) * sin(時角)) +\n  e3 * ( sin(lat/360) * sin(赤緯) + cos(lat/360) * cos(赤緯) * cos(時角) )\n\nK   = g.dic.axtial_tilt / 360\n高度 = -50/60\n時角 = ( lat, 高度, 赤緯 )->\n  acos(( sin(高度) - sin(lat/360) * sin(赤緯) ) / cos(lat/360) * cos(赤緯) )\n方向角 = ( lat, 高度, 赤緯, 時角 )->\n  acos(( cos(lat/360) * sin(赤緯) - sin(lat/360) * cos(赤緯) * cos(時角) ) / cos(高度) )\n季節 = 春分点からの移動角度\n赤緯 = asin( sin(K) * sin(季節) )\n赤経 = atan( tan(季節) * cos(K) )\n南中時刻 = ->\n  正午 + 時角 + ( 赤経 - 季節 ) + 平均値 + tz_offset\n日の出 = ->\n  南中時刻 - 時角\n日の入 = ->\n  南中時刻 + 時角\n###\n\n  solor: (utc, idx = 2)->\n    days = [\n        6      # golden hour end         / golden hour\n      -18 / 60 # sunrise bottom edge end / sunset bottom edge start\n      -50 / 60 # sunrise top edge start  / sunset top edge end\n       -6      # dawn                    / dusk\n      -12      # nautical dawn           / nautical dusk\n      -18      # night end               / night\n    ]\n    { asin, acos, atan, sin, cos, tan, PI } = Math\n    deg_to_rad  = 2 * PI / 360\n    year_to_rad = 2 * PI / @calc.msec.year\n    rad_to_day  = @calc.msec.day / ( 2 * PI )\n\n    高度 = days[idx]        * deg_to_rad\n    K   = @dic.axtial_tilt * deg_to_rad\n    lat = @dic.lat         * deg_to_rad\n\n    T0  = to_tempo_bare @calc.msec.year, @calc.zero.season, utc\n    day = to_tempo_bare @calc.msec.day, -@dic.tz_offset,    utc\n\n    # 南中差分の計算がテキトウになってしまった。あとで検討。\n    南中差分A = 2   * @calc.msec.day / 360 * sin(( T0.since              ) * year_to_rad     )\n    南中差分B = 2.5 * @calc.msec.day / 360 * sin(( T0.since + 1296000000 ) * year_to_rad * 2 )\n    南中時刻   = ( day.last_at + day.next_at ) / 2 + 南中差分A + 南中差分B\n\n    T1 = to_tempo_bare @calc.msec.year, @dic.spring, 南中時刻\n\n    spring = T1.last_at\n    季節 = T1.since * year_to_rad\n    赤緯 = asin( sin(K) * sin(季節) )\n    赤経 = atan( tan(季節) * cos(K) )\n    時角 = acos(( sin(高度) - sin(lat) * sin(赤緯) ) / cos(lat) * cos(赤緯) )\n\n    方向角 = acos(( cos(lat) * sin(赤緯) - sin(lat) * cos(赤緯) * cos(時角) ) / cos(高度) )\n    日の出 = 南中時刻 - 時角 * rad_to_day\n    日の入 = 南中時刻 + 時角 * rad_to_day\n\n    graph = \n      \"  赤緯.#{\n        Math.floor 赤緯 / deg_to_rad \n      }  赤経.#{\n        Math.floor 赤経 / deg_to_rad \n      }  方向角.#{\n        Math.floor 方向角 / deg_to_rad\n      }  時角.#{\n        Math.floor 時角 / deg_to_rad\n      }  日の出.#{\n        @format 日の出, 'Hm'\n      }  南中時刻.#{\n        @format 南中時刻, 'Hm'\n      }  日の入.#{\n        @format 日の入, 'Hm'\n      }\"\n    { 時角, 方向角, 南中時刻, 日の出, 日の入, graph }\n\n  to_tempos: (utc)->\n    drill_down = (base, path, at = utc)=>\n      table = @get_table base, path\n      if table\n        o = to_tempo_by table, base.last_at, at\n      else\n        b_size = @calc.msec[path]\n        o = to_tempo_bare b_size, base.last_at, at\n        o.length = base.size / o.size\n      o.path = path\n      o\n\n    to_tempo_mod = (path, sub, at = utc)=>\n      o = to_tempo_bare @calc.msec[path], @calc.zero[path], at\n      do2 = to_tempo_bare @calc.msec[sub], @calc.zero[sub], o.next_at\n      if do2.last_at <= at\n        do3 = to_tempo_bare @calc.msec[sub], @calc.zero[sub], o.next_at + o.size\n        o.now_idx += 1\n        o.last_at = do2.last_at\n        o.next_at = do3.last_at\n      else\n        do1 = to_tempo_bare @calc.msec[sub], @calc.zero[sub], o.next_at - o.size\n        o.last_at = do1.last_at\n        o.next_at = do2.last_at\n      o\n\n    J = to_tempo_bare @calc.msec.day, @calc.zero.jd, utc # ユリウス日\n\n    # season in year_of_planet\n    Zz = to_tempo_bare @calc.msec.year, @calc.zero.season, utc # 太陽年\n\n    # 正月中気\n    N0_p = Zz.last_at + @calc.msec.season\n    N0 = to_tempo_mod \"moon\", \"day\", N0_p\n\n    # 今月と中気\n    Nn = to_tempo_mod \"moon\", \"day\", utc\n    Nn.now_idx -= N0.now_idx\n    Nn_p = Zz.last_at + @calc.msec.season * ( 1 + Nn.now_idx * 2 )\n\n    # 先月と中気\n    Np = to_tempo_mod \"moon\", \"day\", Nn.last_at - 1\n    Np.now_idx -= N0.now_idx\n    Np_p = Zz.last_at + @calc.msec.season * ( 1 + Np.now_idx * 2 )\n\n    unless after_leap_month = Np.next_at <= Np_p\n      Nn.is_leap = Nn.next_at <= Nn_p\n    if after_leap_month\n      Nn.now_idx -= 1\n    else\n      switch Nn.now_idx\n        when -1\n          # 太陽年初に0月が出てしまう。昨年末にする。\n          Nn.now_idx = @dic.months.length - 1\n          Zz.now_idx -= 1\n        when @dic.months.length\n          # 太陽年末に13月が出てしまう。年初にする。\n          Nn.now_idx = 0\n          Zz.now_idx += 1\n\n    Z  = drill_down Zz, \"season\" # 太陽年の二十四節気\n    N  = drill_down Nn, 'day'\n\n    # day    in week (曜日)\n    w = to_tempo_bare @calc.msec.week, @calc.zero.week,   utc\n    e = E = drill_down w,  \"day\"\n\n    if @dic.leaps?\n      p = to_tempo_bare @calc.msec.period, @calc.zero.period, utc\n      u = drill_down p, \"year\"\n      u.now_idx = u.now_idx + p.now_idx * @calc.divs.period\n\n      M = drill_down u, \"month\"\n      d = drill_down M, \"day\"\n    else\n      u = Zz\n      M = Nn\n      d = N\n      # 旧暦では、週は月初にリセットする。\n      e.now_idx = ( M.now_idx + d.now_idx ) % @dic.weeks.length\n\n    #        in year appendix\n    D = drill_down u, \"day\"\n\n    # hour   in day\n    H = drill_down d, \"hour\"\n    # minute in day\n    m = drill_down H, \"minute\"\n    s = drill_down m, \"second\"\n    now_idx = utc - s.last_at\n    S = { now_idx }\n\n    G = {}\n    if @table.msec.era?\n      era_base = to_tempo_by @table.msec.era, @calc.zero.era, utc\n      era = @calc.eras[era_base.now_idx]\n      if era?[0]\n        u.now_idx += 1 - era[2]\n        G.label = era[0]\n\n    y = Object.assign {}, u\n    if u.now_idx < 1\n      G.label = \"紀元前\"\n      y.now_idx = 1 - u.now_idx\n\n    graph = \"#{\n      @dic.seasons[Z.now_idx]\n    } #{\n      if Z.now_idx % 2\n        _.padStart ( Z.now_idx + 1 )/ 2, 2,'0'\n      else\n        \"  \"\n    }\\t #{\n      y.now_idx\n    }年#{\n      if Nn.is_leap\n        \"閏\"\n      else\n        \"  \"\n    }#{\n      _.padStart Nn.now_idx + 1, 2,'0'\n    }月#{\n      _.padStart N.now_idx + 1, 2,'0'\n    }日\\t\"\n    { G,u, y,M,d, D,w,e,E, H,m,s,S, Z,N, J, era, graph }\n\n  index: (tgt, str = default_parse_format)->\n    tokens = str.match reg_token\n\n    reg = @parse_reg()\n    reg = \"^\" + tokens.map (token)->\n      if val = reg[token[0]]\n        val\n      else\n        token.replace(/([\\\\\\[\\]().*?])/g,\"\\\\$1\")\n    .join(\"\")\n    idx = @parse_idx()\n    p = y = M = d = H = m = s = S = J = 0\n    data = { p,y,M,d,H,m,s,S, J }\n    for s, p in tgt.match(reg)[1..]\n      token = tokens[p]\n      if val = idx[token[0]]\n        data[token[0]] = val s\n    if @dic.leaps?\n      data.p = Math.floor( data.y / @calc.divs.period )\n      data.y = data.y - data.p * @calc.divs.period\n    data\n\n  parse_reg: ->\n    join = (list)->\n      \"(#{ list.join(\"|\") })\"\n    G = join [@dic.era, \"紀元前\"]\n    y = \"((?:\\\\d)+年)\"\n    M = join @dic.months\n    d = \"((?:\\\\d)+日)\"\n    H = join @dic.hours\n    m = join @dic.minutes\n    s = \"((?:\\\\d)+秒)\"\n    S = \"(\\\\d+)\"\n    J = \"([\\\\d.]+)\"\n    { G, y,M,d, H,m,s,S, J }\n\n  parse_idx: ->\n    G = (s)=> @dic.era.indexOf(s)\n    y = (s)=> s[..-2] - 0\n    M = (s)=> @dic.months.indexOf(s)\n    d = (s)=> s[..-2] - 1\n    H = (s)=> @dic.hours.indexOf(s)\n    m = (s)=> @dic.minutes.indexOf(s)\n    s = (s)=> s[..-2] - 0\n    S = (s)=> s[..-2] - 0\n    J = (s)=> s - 0\n    { G, y,M,d, H,m,s,S, J }\n\n  to_label: (o, token, length )->\n    switch token\n      when 'G'\n        o.label\n      when 'M'\n        \"#{\n          if o.is_leap\n            \"閏\"\n          else\n            \"\"\n        }#{ @dic.months[ o.now_idx ] }\"\n      when 'H'\n        @dic.hours[ o.now_idx ]\n      when 'm'\n        @dic.minutes[ o.now_idx ]\n      when 'e','E'\n        @dic.weeks[ o.now_idx ]\n      when 'Z'\n        @dic.seasons[ o.now_idx ]\n      when 'N'\n        @dic.moons[ o.now_idx ]\n\n      when 'J'\n        \"#{ _.padStart o.now_idx, length, '0' }\"\n\n      when 'y', 'u'\n        \"#{ _.padStart o.now_idx, length, '0' }年\"\n\n      when 'd'\n        \"#{ _.padStart o.now_idx + 1, length, '0' }日\"\n      when 's'\n        \"#{ _.padStart o.now_idx, length, '0' }秒\"\n\n      when 'S'\n        \"#{ o.now_idx / @calc.msec.second }\"[2..]\n\n  tempo_list: (tempos, token)->\n    switch token[0]\n      when 'G'\n        throw new Error \"request token can't tempos. [#{token}]\"\n\n    unless tempo = tempos[token[0]]\n      throw new Error \"request token can't tempos. [#{token}]\"\n\n    { table, length, now_idx, last_at, size, gap } = tempo\n    list = []\n    if table\n      last_at = gap\n      for next_at, now_idx in table\n        next_at += gap\n        size = next_at - last_at\n        list.push { now_idx, size, last_at, next_at, last_time: new Date(last_at), next_time: new Date(next_at) }\n        last_at = next_at\n\n    if length\n      base = last_at - size * now_idx\n      for now_idx in [0...length]\n        last_at = (now_idx + 0) * size + gap\n        next_at = (now_idx + 1) * size + gap\n        list.push { now_idx, size, last_at, next_at, last_time: new Date(last_at), next_time: new Date(next_at) }\n    list\n\n  ranges: (utc, token)->\n    @tempo_list @to_tempos(utc), token\n\n  parse: (tgt, str = default_parse_format)->\n    { p,y,M,d,H,m,s,S, J } = @index tgt, str\n\n    if J\n      return @calc.zero.jd + J * @calc.msec.day \n\n    ( d * @calc.msec.day ) +\n    ( H * @calc.msec.hour ) +\n    ( m * @calc.msec.minute ) +\n    ( s * @calc.msec.second ) +\n    ( S ) +\n    if @dic.leaps?\n      size =\n        @table.range.year[y] * @calc.msec.day\n\n      @calc.zero.period +\n      ( p * @calc.msec.period ) +\n      ( @table.msec.year[y - 1] || 0 ) +\n      ( @table.msec.month[size][M - 1] || 0 )\n    else\n      @calc.zero.season +\n      ( y * @calc.msec.year) +\n      ( M * @calc.msec.month )\n\n  format: (utc, str = default_format_format)->\n    o = @to_tempos utc\n    str.match reg_token\n    .map (token)=>\n      if val = o[token[0]]\n        @to_label val, token[0], token.length\n      else\n        token\n    .join(\"\")\n\nmodule.exports = FancyDate\n","Mem = require \"memory-orm\"\n\nif window?\n  firebase = require \"firebase/app\"\n  require \"firebase/firestore\"\n\nfirestore = ->\n  store = firebase.firestore()\n  store.settings {}\n  store\n\ncopy_to_str = (key)->(...args)->\n  @str += \" #{key}:\"\n  for arg in args\n    @str += arg\n    @str += \":\"\n  @ref = @ref[key] ...args\n  @\n\nclass FirestoreQueryProxy\n  constructor: (@str, @ref)->\n  orderBy: copy_to_str \"orderBy\"\n  limit:   copy_to_str \"limit\"\n  where:   copy_to_str \"where\"\n\njoinSnapshot = (target, shot)->\n  eject = ->\n  (gate)->\n    eject()\n    eject =\n      if gate && @[target]\n        console.log \"join\", gate\n        @[target].onSnapshot shot.bind(@), (err)->\n          console.error err\n      else\n        ->\n\nfirestore_base = (id, path, querys, { del, add, snap, shot })->\n  default_id = \"#{id}_default\"\n\n  join_id = \"#{id}_join\"\n  snap_id = \"#{id}_snap\"\n  path_id = \"#{id}_path\"\n\n  add_id  = \"#{id}_add\"\n  del_id  = \"#{id}_del\"\n\n  joins = []\n  watch = {}\n  computed =\n    _firestore: firestore\n    [path_id]: path\n    [snap_id]: ->\n      if @[path_id]\n        snap.call @, @[path_id]\n\n  if querys?.length\n    querys.forEach (query, idx)->\n      query_id = \"#{id}_query_#{idx}_query\"\n      ref_id   = \"#{id}_query_#{idx}_ref\"\n      str_id   = \"#{id}_query_#{idx}_str\"\n\n      computed[ref_id] = ->\n        return unless @[path_id]\n        query.call @, new FirestoreQueryProxy @[path_id], @[snap_id]\n\n      computed[str_id] = ->\n        @[ref_id]?.str\n\n      computed[query_id] = ->\n        if @[str_id]\n          @[ref_id].ref\n\n      join = joinSnapshot query_id, shot\n      joins.push [join, str_id]\n      watch[str_id] = join\n\n  else\n    join = joinSnapshot snap_id, shot\n    joins.push [join, path_id]\n    watch[path_id] = join\n\n  beforeDestroy: ->\n    for [join, join_id] in joins\n      join.call @, undefined\n\n  mounted: ->\n    @[default_id] = @[id]\n    for [join, join_id] in joins\n      join.call @, @[join_id]\n\n  methods:\n    [add_id]: add\n    [del_id]: del\n\n  computed: computed\n  watch:    watch\n\n\nmodule.exports = m =\n  firestore_models: (id, path, ...querys)->\n    snap_id = \"#{id}_snap\"\n    set_key = id[..-2]\n    firestore_base id, path, querys,\n      del: (_id)->\n        return unless _id\n        @[snap_id]?.doc(_id).delete()\n      add: (doc)->\n        { _id } = doc\n        return unless _id\n        @[snap_id]?.doc(_id).set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.collection path\n      shot: (qs)->\n        qs.docChanges().forEach ({ newIndex, oldIndex, type, doc })=>\n          switch type\n            when 'added', 'modified'\n              Mem.Set[set_key].add doc.data()\n            when 'removed'\n              Mem.Set[set_key].remove doc.id\n\n  firestore_model: (id, path)->\n    snap_id = \"#{id}_snap\"\n    set_key = id\n    firestore_base id, path, null,\n      del: ->\n        @[snap_id]?.delete()\n      add: (doc)->\n        @[snap_id]?.set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.doc path\n      shot: (doc)->\n        if o = doc.data()\n          Mem.Set[set_key].add o\n        else\n          Mem.Set[set_key].remove doc.id\n\n  firestore_collection: (id, path, ...querys)->\n    snap_id = \"#{id}_snap\"\n    firestore_base id, path, querys,\n      del: (_id)->\n        return unless _id\n        @[snap_id]?.doc(_id).delete()\n      add: (doc)->\n        { _id } = doc\n        return unless _id\n        @[snap_id]?.doc(_id).set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.collection path\n      shot: (qs)->\n        qs.docChanges().forEach ({ newIndex, oldIndex, type, doc })=>\n          switch type\n            when 'added', 'modified'\n              @[id][doc.id] = doc.data()\n            when 'removed'\n              delete @[id][doc.id]\n\n  firestore_doc: (id, path)->\n    snap_id = \"#{id}_snap\"\n    default_id = \"#{id}_default\"\n    firestore_base id, path, null,\n      del: ->\n        @[snap_id]?.delete()\n      add: (doc)->\n        @[snap_id]?.set doc,\n          merge: true\n      snap: (path)->\n        @_firestore.doc path\n      shot: (doc)->\n        @[id] =\n          if doc.exists\n            doc.data()\n          else\n            @[default_id]\n","\nchk = ( all, local, msg, b )->\n  all.push msg\n  if b\n    local.push msg\n\nmodule.exports =\n  error: (id, cb)->\n    local_id = \"#{id}_local\"\n    all_id = \"#{id}_all\"\n    is_id = \"is_#{id}\"\n\n    props: [id]\n\n    data: ->\n      [all_id]: []\n\n    computed:\n      [local_id]: ->\n        cb.call @, chk.bind null, @[all_id] = [], local = []\n        local\n\n    watch:\n      [local_id]: (local)->\n        ary = _.difference @[id], @[all_id]\n        ary = _.union ary, local\n        @$emit \"update:#{id}\", ary\n\n  form: (id, cb, origin)->\n    origin_id = \"#{id}_origin\"\n    base_id = \"#{id}_base\"\n    init_id = \"#{id}_init\"\n    is_edit_id = \"is_#{id}_edit\"\n    keys = []\n\n    data: ->\n      form = cb.call @\n      keys = Object.keys form\n      base = {}\n      for key in keys\n        form[key] = base[key] = null\n\n      [id]: form\n      [base_id]: base\n\n    computed:\n      [origin_id]: origin\n      [is_edit_id]: ->\n        ! _.isEqual @[id], @[base_id]\n\n    methods:\n      [init_id]: (src)->\n        for key in keys\n          @[id][key] = @[base_id][key] = src[key]\n\n    watch:\n      [origin_id]: (o)->\n        @[init_id] o\n","require './fancy-date-sample'\n\nmodule.exports = {\n  FancyDate: require \"./fancy-date\"\n  ...require \"./struct\"\n  ...require \"./time\"\n  ...require \"./timer\"\n  ...require \"./uri\"\n  ...require \"./curtain\"\n  ...require \"./observer\"\n  ...require \"./storage\"\n  ...require \"./firebase\"\n  ...require \"./device\"\n  ...require \"./poll\"\n  ...require \"./path\"\n  ...require \"./vue\"\n  ...require \"./form\"\n}","_ = require 'lodash'\n\n\nintersectionBase = (option)->\n  observer =\n    if IntersectionObserver?\n      new IntersectionObserver (doms)->\n        doms.forEach (o)->\n          o.target._cb_intersection\n            is_hit: o.isIntersecting\n            ratio: o.intersectionRatio\n            cross: o.intersectionRect\n            bound: o.boundingClientRect\n            root:  o.rootBounds\n\n      , option\n    else\n      observe: ->\n      unobserve: ->\n      disconnect: ->\n\n  (id)->\n    default_id = \"#{id}_default\"\n\n    bind: (el, binding, { context })->\n      vm = context\n      vm[default_id] = _.get vm, id\n      _.set vm, id, null\n      # vm[type_id] = types[vm[default_id].constructor]\n\n    inserted: (el, binding, { context })->\n      cb = (o)->\n        _.set @, id, \n          if o.is_hit\n            @[default_id]\n          else\n            null\n      el._cb_intersection = cb.bind context\n      observer.observe el\n\n    unbind: (el)->\n      observer.unobserve el\n      # observer.disconnect\n\nresize_observer =\n  if ResizeObserver?\n    new ResizeObserver (doms)->\n      doms.forEach (o)->\n        { width, height } = o.contentRect\n        width  = parseInt width\n        height = parseInt height\n        o.target._cb_resize { width, height }\n  else\n    observe: ->\n    unobserve: ->\n    disconnect: ->\n\nmodule.exports =\n  resize: (id)->\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n    observer = resize_observer\n\n    bind: (el, binding, { context })->\n      vm = context\n      vm[default_id] = _.get vm, id\n      # vm[type_id] = types[vm[default_id].constructor]\n\n    inserted: (el, binding, { context })->\n      cb = (size)->\n        _.set @, id, size\n      el._cb_resize = cb.bind context\n      observer.observe el\n\n    unbind: (el)->\n      observer.unobserve el\n      observer.disconnect el\n\n  on_horizon: intersectionBase\n    root: null\n    rootMargin: '-50% 0% -50% 0%'\n    threshold: [0]\n\n  on_peek: intersectionBase\n    root: null\n    rootMargin: '25%'\n    threshold: [0]\n\n  on_appear: intersectionBase\n    root: null\n    rootMargin: '0%'\n    threshold: [0.5]\n","{ Query } = require 'memory-orm'\n\nmodule.exports = m =\n  path_by: (idx = 'idx', keys)->\n    idx_a = \"#{idx}_a\"\n    computed = {}\n    computed[idx_a] =\n      get: ->\n        @[idx]?.split(\"-\") || []\n\n    keys.forEach (name, at)->\n      return unless name\n      key  = \"#{name}_id\"\n      list = \"#{name}s\"\n      computed[key] =\n        get: ->\n          if at < @[idx_a].length\n            @[idx_a][0..at].join(\"-\")\n      computed[name] =\n        get: ->\n          Query[list].find @[key]\n    { computed }\n","Mem = require 'memory-orm'\n\ndexie = null\npoll_request = ->\n  return unless document?\n  Dexie = require(\"dexie\").default\n  dexie = new Dexie 'poll-web'\n  dexie.version(1).stores\n    meta: '&idx'\n    data: '&idx'\n\n  poll_request = ->\n\n{ to_tempo } = require \"./time\"\n\n# has_last = {}\n\nis_cache = {}\nis_online = is_visible = false\n\n\n\npoll = (cb)->\n  mounted: ->\n    poll_request()\n    @timers = {}\n    window.addEventListener 'offline', @_waitwake\n    window.addEventListener 'online', @_waitwake\n    document.addEventListener 'visibilitychange', @_waitwake\n    @_waitwake()\n      \n  destroyed: ->\n    window.removeEventListener 'offline', @_waitwake\n    window.removeEventListener 'online', @_waitwake\n    document.removeEventListener 'visibilitychange', @_waitwake\n    for key, val of @timers\n      clearTimeout val\n\n  methods:\n    get_by_network: ->\n      for key, val of @timers\n        clearTimeout val\n\n      list = cb.call @\n      list.map ([name, id])=>\n        idx = [name, id].join(\"&\")\n        dexie.meta.delete idx\n        dexie.data.delete idx\n        is_cache[idx] = 0\n      @_waitwake()\n\n    _waitwake: ->\n      is_online  = window.navigator.onLine\n      is_visible = 'hidden' != document.visibilityState\n      is_ok = is_online && is_visible\n      if is_ok\n        list = cb.call @\n        await Promise.all list.map ([name, id])=>\n          @$store.dispatch name, { id, name, @timers }\n      else\n        for key, val of @timers\n          clearTimeout val\n\npoll.cache = (timestr = \"10s\", version = \"1.0.0\", vuex_id, cb)->\n  # console.log { timestr, timeout, url: cb('*') }\n  ({ dispatch, state, commit, rootState }, { id, name, timers })->\n    url = cb id\n    idx = [name, id].join(\"&\")\n\n    roop = ->\n      { last_at, write_at, next_at, timeout } = to_tempo timestr\n\n      get_pass = ->\n        wait = new Date - write_at\n        console.log { timestr, idx, wait, url: null }\n\n      get_by_lf = ->\n        meta = await dexie.data.get idx\n        Mem.State.store meta\n\n        wait = new Date - write_at \n        console.log { timestr, idx, wait, url: '(LF)' }\n\n      get_by_network = ->\n        meta = await poll._api[name] url, id\n        meta.idx = idx\n\n        await dexie.data.put meta\n        wait = new Date - write_at\n        console.log { timestr, idx, wait, url }\n\n      try\n        if write_at < is_cache[idx]\n          get_pass()\n        else\n          # IndexedDB metadata not use if memory has past data, \n          unless 0 < is_cache[idx]\n            meta = await dexie.meta.get idx\n            unless meta?.version == version\n              meta = null\n\n          switch\n            when write_at < meta?.next_at\n              await get_by_lf()\n\n            when 0 < meta?.next_at\n              await get_by_lf()\n              await get_by_network()\n\n            else\n              await get_by_network()\n              dexie.meta.put { idx, version, next_at }\n        is_cache[idx] = next_at\n      catch e\n        console.error e\n\n      if timeout < 0x7fffffff  #  ほぼ25日\n        timers[url] = setTimeout roop, timeout\n    roop()\n\npoll.caches = (...[timestr, version], actions)->\n  for key, cb of actions\n    actions[key] = poll.cache timestr, version, key, cb\n  actions\n\npoll._api =\n  fetch: (url, cb)->\n    res = await fetch url\n    data = await res.json()\n    Mem.State.transaction ->\n      cb data\n\npoll.api = (o)->\n  Object.assign poll._api, o\n\nmodule.exports = { poll }\n","_ = require 'lodash'\nCookie = require 'tiny-cookie'\n{ types, relative_to } = require \"./struct\"\n\n$session_storage = {}\n$local_storage = {}\n$cookie_storage = {}\n\ncapture = (s, type, _default)->\n  if s?\n    type.by_str s\n  else\n    _default\n\nmodule.exports = m =\n  sessionStorage: (id)->\n    global_id = \"$data.$session_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $session_storage, id\n      _.set $session_storage, id, null\n\n    data: -> { $session_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = window.sessionStorage.getItem id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $session_storage, id, val\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $session_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          window.sessionStorage.setItem id, s\n        else\n          window.sessionStorage.removeItem id\n\n  localStorage: (id)->\n    global_id = \"$data.$local_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    handle_id = \"#{id}_handle\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $local_storage, id\n      _.set $local_storage, id, null\n\n    data: -> { $local_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = window.localStorage.getItem id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $local_storage, id, val\n      @[handle_id] = ({ key, newValue })=>\n        if key == id\n          val = capture newValue, @[type_id], @[default_id]\n          _.set @, id, val\n          _.set $local_storage, id, val\n\n      window.addEventListener \"storage\", @[handle_id]\n    \n    beforeDestroy: ->\n      window.removeEventListener \"storage\", @[handle_id]\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $local_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          window.localStorage.setItem id, s\n        else\n          window.localStorage.removeItem id\n\n  cookie: (id, options = { expires: '1M' })->\n    global_id = \"$data.$cookie_storage.#{id}\"\n    default_id = \"#{id}_default\"\n    type_id = \"#{id}_type\"\n\n    unless _.has $cookie_storage, id\n      _.set $cookie_storage, id, null\n\n    data: -> { $cookie_storage }\n\n    created: ->\n      @[default_id] = _.get @, id\n      @[type_id] = types[@[default_id].constructor]\n\n    mounted: ->\n      s = Cookie.get id\n      val = capture s, @[type_id], @[default_id]\n      _.set @, id, val\n      _.set $cookie_storage, id, val\n\n    watch:\n      [global_id]: ( val )->\n        _.set @, id, val\n\n      [id]: ( val )->\n        _.set $cookie_storage, id, val\n        if val?\n          s = @[type_id].to_str val\n          Cookie.set id, s, options\n        else\n          Cookie.remove id\n\n","_ = require 'lodash'\n\nzero = [null, undefined, \"\", NaN]\n\nsimple_route = (o)->\n  for key, val of o.query\n    if zero.includes val\n      delete o.query[key]\n  o\n\nrelative_to = ({ name, params, query, hash }, o, is_replace)->\n  unless is_replace\n    params = _.cloneDeep params\n    query  = _.cloneDeep query\n  to = { name, params, query, hash }\n  for key, val of o\n    tgt =\n      if params.hasOwnProperty key\n        params\n      else\n        query\n    tgt[key] = val\n  simple_route to\n\nto_String = (nil)-> (u)->\n  if zero.includes u\n    nil\n  else\n    String u\n\nto_Number = (u)->\n  if zero.includes u\n    NaN\n  else\n    Number u\n\nto_Array = (u)->\n  if zero.includes u\n    []\n  else\n    if u instanceof Array then u else Array u\n\nmodule.exports = {\n  simple_route\n  relative_to\n  types:\n    [Number]:\n      to_str: to_String \"\"\n      by_str: to_Number\n      by_url: to_Number\n    [String]:\n      to_str: to_String \"\"\n      by_str: to_String undefined\n      by_url: to_String \"\"\n    [Array]:\n      to_str: (o)-> JSON.stringify(o) || []\n      by_str: (o)-> JSON.parse(o) || []\n      by_url: to_Array\n    [Object]:\n      to_str: (o)-> JSON.stringify(o) || {}\n      by_str: (o)-> JSON.parse(o) || {}\n}\n","class Tempo\n  constructor: (...@args, @callback)->\n    @tempo = to_tempo @args[0], @args[1], new Date 0\n\n  tick: ->\n    tempo = to_tempo ...@args\n    return if @tempo.now_idx == tempo.now_idx\n    @callback(tempo)\n    @tempo = tempo\n\nto_msec = (str)->\n  1000 * to_sec str\n\nto_sec = (str)->\n  timeout = 0\n  str.replace /(\\d+)([ヵ]?([smhdwy秒分時日週月年])[間]?(半$)?)|0/g, (full, num, fullunit, unit, appendix)->\n    return null unless num = Number num\n    if '半' == appendix\n      num += 0.5\n    timeout += num *\n      switch unit\n        when \"s\", \"秒\"\n          1\n        when \"m\", \"分\"\n          60\n        when \"h\", \"時\"\n          3600\n        when \"d\", \"日\"\n          3600 * 24\n        when \"w\", \"週\"\n          3600 * 24 * 7\n        when \"y\", \"年\"\n          31556925.147 # 2019 average.\n        else\n          throw new Error \"#{str} at #{num}#{unit}\"\n  timeout\n\nto_timer = (msec, unit_mode = 1)->\n  str = \"\"\n  for o in TIMERS\n    unit = o[unit_mode]\n    base = o[2]\n    if idx = Math.floor( msec / base )\n      str += \"#{idx}#{unit}\"\n    msec = msec % base\n  str\n\nto_relative_time_distance = (msec)->\n  return DISTANCE_NAN if msec < -VALID || VALID < msec || msec - 0 == NaN\n  for [limit], idx in DISTANCES when msec < limit\n    return DISTANCES[idx]\n  return DISTANCE_LONG_AGO\n\nto_tempo = (size, gap_str = \"0s\", write_at = new Date)->\n  size = to_msec size\n  gap   = to_msec(gap_str) + tempo_gap\n  to_tempo_bare size, gap, write_at - 0, 0\n\nto_tempo_bare = (size, gap, write_at)->\n  now_idx = Math.floor(( write_at - gap) / size)\n  last_at = (now_idx + 0) * size + gap\n  next_at = (now_idx + 1) * size + gap\n  remain  =  next_at - write_at\n  since   = write_at -  last_at\n  timeout = remain\n\n  { last_at, write_at, next_at, timeout, now_idx, remain, since, gap, size }\n\n###\nto_tempo_by = (table, gap, write_at)->\n  scan_at = write_at - gap\n  if scan_at < 0\n    now_idx = -1\n    next_at = gap\n    last_at = -Infinity\n  else\n    last_at = 0\n    for next_at, now_idx in table\n      unless scan_at < next_at\n        last_at = next_at\n        continue\n      break\n\n    if last_at == next_at\n      next_at = Infinity\n    next_at += gap\n    last_at += gap\n\n  size   =  next_at -  last_at\n  remain =  next_at - write_at\n  since  = write_at -  last_at\n  timeout = remain\n\n  { last_at, write_at, next_at, timeout, now_idx, remain, since, gap, size, scan_at, table }\n###\n# バイナリサーチ 高速化はするが、微差なので複雑さのせいで逆に遅いかも？\nto_tempo_by = (table, gap, write_at)->\n  scan_at = write_at - gap\n  if scan_at < 0\n    now_idx = -1\n    next_at = gap\n    last_at = -Infinity\n  else\n    top_idx = 0\n    now_idx = table.length\n    while top_idx < now_idx\n      mid_idx = (top_idx + now_idx) >>> 1\n      next_at = table[mid_idx]\n      if next_at <= scan_at\n        top_idx = mid_idx + 1\n      else\n        now_idx = mid_idx\n\n    next_at = table[now_idx] || Infinity\n    last_at = table[now_idx - 1] || 0\n    next_at += gap\n    last_at += gap\n\n  size   =  next_at -  last_at\n  remain =  next_at - write_at\n  since  = write_at -  last_at\n  timeout = remain\n\n  { last_at, write_at, next_at, timeout, now_idx, remain, since, gap, size, scan_at, table }\n\nSECOND = to_msec  \"1s\"\nMINUTE = to_msec  \"1m\"\nHOUR =   to_msec  \"1h\"\nDAY =    to_msec  \"1d\"\nWEEK =   to_msec  \"1w\"\nINTERVAL = 0x7fffffff # 31bits.\nMONTH =  to_msec \"30d\"\nYEAR =   to_msec  \"1y\"\nVALID = 0xfffffffffffff # 52 bits.\n\nTIMEZONE_OFFSET_JP = to_msec \"-9h\"\n\ntimezone =\n  if window?\n    MINUTE * (new Date).getTimezoneOffset()\n  else\n    TIMEZONE_OFFSET_JP\n\ntempo_gap = (- new Date(0).getDay() ) * DAY + timezone\n\nTIMERS = [\n  [ \"年\", \"y\", YEAR   ]\n  [ \"週\", \"w\", WEEK   ]\n  [ \"日\", \"d\", DAY    ]\n  [ \"時\", \"h\", HOUR   ]\n  [ \"分\", \"m\", MINUTE ]\n  [ \"秒\", \"s\", SECOND ]\n]\n\nDISTANCES = [\n  DISTANCE_NAN = \n  [   -VALID, INTERVAL,   YEAR, \"？？？\"]\n  [    -YEAR, INTERVAL,   YEAR, \"%s年後\"]\n  [   -MONTH, INTERVAL,  MONTH, \"%sヶ月後\"]\n  [    -WEEK,     WEEK,   WEEK, \"%s週間後\"]\n  [     -DAY,      DAY,    DAY, \"%s日後\"]\n  [    -HOUR,     HOUR,   HOUR, \"%s時間後\"]\n  [  -MINUTE,   MINUTE, MINUTE, \"%s分後\"]\n  [   -25000,   SECOND, SECOND, \"%s秒後\"]\n  [    25000,    25000,  25000, \"今\"]\n  [   MINUTE,   SECOND, SECOND, \"%s秒前\"]\n  [     HOUR,   MINUTE, MINUTE, \"%s分前\"]\n  [      DAY,     HOUR,   HOUR, \"%s時間前\"]\n  [     WEEK,      DAY,    DAY, \"%s日前\"]\n  [    MONTH,     WEEK,   WEEK, \"%s週間前\"]\n  [     YEAR, INTERVAL,  MONTH, \"%sヶ月前\"]\n  [    VALID, INTERVAL,   YEAR, \"%s年前\"]\n  DISTANCE_LONG_AGO =\n  [ Infinity, INTERVAL,  VALID, \"昔\"]\n]\n\nmodule.exports = m = {\n  Tempo\n  to_timer\n  to_msec\n  to_sec\n  to_tempo\n  to_tempo_bare\n  to_tempo_by\n  to_relative_time_distance\n  timezone\n}\n","_ = require 'lodash'\n{ to_msec, to_tempo_bare, to_relative_time_distance } = require \"./time\"\n\n\nclass Tempo\n  constructor: (...@args, @cb)->\n    @tempo = to_tempo @args[0], @args[1] || \"0s\", new Date 0\n\n  tick: ->\n    tempo = to_tempo ...@args\n    return if @tempo.now_idx == tempo.now_idx\n    @cb tempo\n    @tempo = tempo\n\n\ntime_base = (method)-> (id, { times })->\n  default_id = \"#{id}_default\"\n  tail_ids = \"#{id}_tail_ids\"\n  tail_funcs = \"#{id}_tail_funcs\"\n\n  data: ->\n    o = {}\n    times.forEach (time)=>\n      tail_id = \"#{id}_#{time}\"\n      _.set o, tail_id, null\n    o\n\n  created: ->\n    @[tail_ids] = []\n    @[tail_funcs] = []\n\n    id_value = _.get @, id\n\n    times.forEach (time)=>\n      msec = to_msec time\n      tail_id = \"#{id}_#{time}\"\n      _.set @, tail_id, id_value\n\n      @[tail_ids].push tail_id\n      @[tail_funcs].push method (value)=>\n        _.set @, tail_id, value\n      , msec\n\n    @[default_id] = id_value\n\n  watch:\n    [id]: (newValue)->\n      for tail_func, idx in @[tail_funcs]\n        tail_func newValue\n\ndebounces = time_base _.debounce\nthrottles = time_base _.throttle\ndelays = time_base (cb, msec)-> (value)->\n  setTimeout cb, msec, value\n\n\nrelative = (id, { limit, format } = {})->\n  now_id = \"#{id}_now\"\n  msec_id = \"#{id}_msec\"\n  tick_id = \"#{id}_tick\"\n  text_id = \"#{id}_text\"\n  limit_id = \"#{id}_limit\"\n  tempo_id = \"#{id}_tempo\"\n  distance_id = \"#{id}_distance\"\n  interval_id = \"#{id}_interval\"\n\n  data: ->\n    [now_id]: Date.now()\n    [limit_id]: to_msec limit\n\n  computed:\n    [msec_id]: ->\n      @[now_id] - new Date(@[id]).getTime()\n\n    [distance_id]: ->\n      to_relative_time_distance @[msec_id]\n\n    [tempo_id]: ->\n      [, interval] = @[distance_id]\n      to_tempo_bare interval, 0, @[msec_id]\n\n    [text_id]: ->\n      msec = @[msec_id]\n      limit_msec = @[limit_id]\n      [,,, text] = @[distance_id]\n      { now_idx } = @[tempo_id]\n\n      if limit_msec < msec\n        clearInterval @[interval_id]\n        @[interval_id] = null\n        return format @[id]\n\n      @[tick_id]\n      if msec < -limit_msec\n        return format @[id]\n      text.replace '%s', Math.abs now_idx\n\n    [tick_id]: ->\n      { timeout } = @[tempo_id]\n      if @[interval_id]\n        clearInterval @[interval_id]\n      @[interval_id] = setInterval =>\n        @[now_id] = Date.now()\n        @[tick_id]\n      , timeout\n      return\n\n  beforeDestroy: ->\n    clearInterval @[interval_id]\n    @[interval_id] = null\n\nmodule.exports = { relative, delays, debounces, throttles }\n","_ = require 'lodash'\n{ types, relative_to } = require \"./struct\"\n\nzero = [null, undefined, \"\", NaN]\n\nrouteBase = (change_url)-> (id)->\n  default_id = \"#{id}_default\"\n  type_id = \"#{id}_type\"\n\n  route_into = (newRoute, oldRoute)->\n    s = newRoute.params[id] || newRoute.query[id]\n    val =\n      if zero.includes s\n        @[default_id]\n      else\n        @[type_id].by_url s\n    _.set @, id, val\n\n\n  created: ->\n    @[default_id] = _.get @, id\n    @[type_id] = types[@[default_id].constructor]\n\n  # for changed component.\n  mounted: ->\n    s = @$route.params[id] || @$route.query[id]\n    unless zero.includes s\n      val = @[type_id].by_url s\n      _.set @, id, val\n\n  # for same component but uri changed.\n  beforeRouteEnter: (newRoute, oldRoute, next)->\n    next (vm)->\n      route_into.call vm, newRoute, oldRoute\n\n  # for same component but uri changed.\n  beforeRouteUpdate: (newRoute, oldRoute, next)->\n    next()\n    route_into.call @, newRoute, oldRoute\n\n  watch:\n    [id]: ( newVal )->\n      { location, href } = @$router.resolve relative_to @$route, { [id]: newVal }, true\n      change_url.call @, href\n\nmodule.exports = m =\n  replaceState: routeBase (href)->\n    history.replaceState null, null, href\n\n  pushState: routeBase (href)->\n    history.pushState null, null, href\n","_ = require 'lodash'\n\n$shared_memory = {}\n\nmodule.exports = m =\n  share: (id)->\n    $shared_memory[id] ?= null\n\n    data: ->\n      { $shared_memory }\n    computed:\n      [id]:\n        get: ->\n          $shared_memory[id]\n        set: (o)->\n          $shared_memory[id] = o\n\n  vuex_read: (id, opt)->\n    dir = (opt.on || \"\").split('.')\n    getter = [...dir[0..-1], id].join('.')\n\n    computed:\n      [id]:\n        get: ->\n          _.get @$store.state, getter\n\n  vuex: (id, opt)->\n    dir = (opt.on || \"\").split('.')\n    mutation = [dir[0], 'update'].join('/')\n    getter = [...dir[0..-1], id].join('.')\n    setter = [...dir[1..-1], id].join('.')\n  \n    computed:\n      [id]:\n        get: ->\n          _.get @$store.state, getter\n        set: (val)->\n          o = _.set {}, setter, val\n          @$store.commit mutation, o\n\n","module.exports = require(\"dexie\");","module.exports = require(\"firebase/app\");","module.exports = require(\"firebase/firestore\");","module.exports = require(\"lodash\");","module.exports = require(\"memory-orm\");","module.exports = require(\"tiny-cookie\");"],"sourceRoot":""}